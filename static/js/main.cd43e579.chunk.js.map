{"version":3,"sources":["components/ProgressBar/index.jsx","config.js","tools/colors.js","components/TrackInfo/index.jsx","components/NextSongs/index.jsx","components/VolumeControl/index.jsx","components/MainView/index.jsx","assets/spotify.png","components/NoConnectionView/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["ProgressBar","props","className","style","width","progress","backgroundColor","color","BASE_URL","PLAYER_URL","PLAYER_RESUME_URL","PLAYER_PAUSE_URL","PLAYER_NEXT_URL","PLAYER_VOLUME_URL","Vibrant","require","getColor","path","a","v","getPalette","result","getHex","TrackInfo","player","firstTrackTimeRef","useRef","secondTrackTimeRef","useEffect","current","trackTime","firstTrackTime","secondTrackTime","isPaused","imageKey","image","key","useState","setColor","useMemo","then","onClick","fetch","src","alt","track","duration","name","artist","map","join","skipTracks","numTracks","buildTrackCard","index","NextSongs","nextTracksWithColor","nextTracks","nextTrack","color1","setColor1","color2","setColor2","nextKey1","nextKey2","length","VolumeControl","setVolume","volume","VOLUME_PERCENT","Math","floor","MAX_VOLUME","ButtonGroup","size","variant","fullWidth","aria-label","Button","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","MainView","NoConnectionView","timeString","setTimeString","console","log","logo","intervalID","setInterval","date","Date","toLocaleTimeString","navigator","language","hour","minute","clearInterval","App","setPlayer","timeStamp","setTimeStamp","idleCount","setIdleCount","interval","response","json","theme","createMuiTheme","palette","primary","main","secondary","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd43e579.chunk.js","sourcesContent":["\n\nconst ProgressBar = (props) => {\n  return (\n    <div className=\"ProgressBar\">\n      <div style={{width: `${props.progress}%`, backgroundColor: props.color}} className=\"ProgressBar__progress\">\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressBar;","export const BASE_URL = \"http://localhost:8080\"\nexport const PLAYER_URL = `${BASE_URL}/player/current`\nexport const PLAYER_RESUME_URL = `${BASE_URL}/player/resume`\nexport const PLAYER_PAUSE_URL = `${BASE_URL}/player/pause`\nexport const PLAYER_NEXT_URL = `${BASE_URL}/player/next`\nexport const PLAYER_VOLUME_URL = `${BASE_URL}/player/volume/set/`","\n\nconst Vibrant = require('node-vibrant');\n\nexport const getColor = async (path) => {\n  let v = new Vibrant(path)\n  const result = await v.getPalette()\n  const color = result.Vibrant.getHex()\n  return color\n}","import React, { useEffect, useRef, useMemo, useState } from 'react';\nimport { useColor } from 'color-thief-react'\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport ProgressBar from '../ProgressBar'\nimport {PLAYER_RESUME_URL, PLAYER_PAUSE_URL} from '../../config';\nimport { getColor } from '../../tools/colors';\n\nconst TrackInfo = (props) => {\n  const {player} = props\n\n  const firstTrackTimeRef = useRef();\n  const secondTrackTimeRef = useRef();\n  useEffect(() => {\n    secondTrackTimeRef.current = firstTrackTimeRef.current\n    firstTrackTimeRef.current = player.trackTime;\n  });\n\n  const firstTrackTime = firstTrackTimeRef.current;\n  const secondTrackTime = secondTrackTimeRef.current;\n  const isPaused = firstTrackTime === player.trackTime && secondTrackTime === player.trackTime\n\n  const onPlayPause = () =>  {\n    if(isPaused) {\n      fetch(PLAYER_RESUME_URL)\n    } else {\n      fetch(PLAYER_PAUSE_URL)\n    }\n  }\n\n  const imageKey = player.image?.key\n  const [color, setColor] = useState();\n  useMemo(() => imageKey && getColor(`https://i.scdn.co/image/${imageKey}`), [imageKey]).then(result => setColor(result))\n  \n  return (\n    <div onClick={onPlayPause} className=\"TrackInfo\">\n      <div className=\"TrackInfo__art\">\n        <img src={`https://i.scdn.co/image/${player.image.key}`} className=\"TrackInfo__image\" alt=\"art\" />\n        {isPaused && (<div className=\"TrackInfo__pause-overlay\"><PlayCircleFilledIcon className=\"TrackInfo__pause-icon\"/></div>) }\n      </div>\n      <div className=\"TrackInfo__infos\">\n        <ProgressBar progress={player.trackTime/(player.track.duration/100)} color={color}/>\n        <div className=\"TrackInfo__infos-text\">\n          <h2 className=\"TrackInfo__infos-track\">{player.track.name}</h2>\n          <h3 className=\"TrackInfo__infos-artist\">{player.track.artist.map(artist => artist.name).join(', ')}</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TrackInfo;","import { useColor } from 'color-thief-react'\nimport {PLAYER_NEXT_URL} from '../../config';\nimport {  useEffect, useMemo, useState } from 'react';\nimport { getColor } from '../../tools/colors';\nconst skipTracks = (numTracks) => {\n  fetch(PLAYER_NEXT_URL).then(()=>{\n    if(numTracks>1){\n      skipTracks(numTracks-1)\n    }\n  })\n\n}\n\nconst buildTrackCard= (track,index) => {\n  return (\n    <div key={track.track.name} onClick={()=>{skipTracks(index+1)}} style={{backgroundColor: track.color}} className=\"NextSongs__card\">\n          <img src={`https://i.scdn.co/image/${track.image.key}`} className=\"NextSongs__card-art\" alt=\"art\" />\n          <div className=\"NextSongs__card-text\">\n            <h2 className=\"NextSongs__infos-track\">{track.track.name}</h2>\n            <h3 className=\"NextSongs__infos-artist\">{track.track.artist.map(artist => artist.name).join(', ')}</h3>\n          </div>\n    </div>\n  )\n}\n\nconst NextSongs = (props) => {\n  const {player} = props\n  const nextTracksWithColor = player.nextTracks.map(nextTrack => ({...nextTrack, color:''}))\n  const [color1, setColor1] = useState();\n  const [color2, setColor2] = useState();\n\n  const nextKey1 = player.nextTracks[0]?.image.key\n  const nextKey2 = player.nextTracks[1]?.image.key\n\n  useMemo(() => nextKey1 && getColor(`https://i.scdn.co/image/${nextKey1}`), [nextKey1]).then(result => setColor1(result))\n  useMemo(() => nextKey2 && getColor(`https://i.scdn.co/image/${nextKey2}`), [nextKey2]).then(result => setColor2(result))\n\n  if(nextTracksWithColor.length > 0){\n    nextTracksWithColor[0].color=color1\n\n    if(nextTracksWithColor.length > 1){\n      nextTracksWithColor[1].color=color2\n    }\n  }\n  \n  return (\n    <div className=\"NextSongs\">\n      <h2 className=\"NextSongs__next\">Next:</h2>\n      <div className=\"NextSongs__cards\">\n        {nextTracksWithColor.map((track,index) => buildTrackCard(track,index))}\n      </div>\n    </div>\n  );\n}\n\nexport default NextSongs;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport {PLAYER_VOLUME_URL} from '../../config';\n\nconst VolumeControl = (props) => {\n\n  const setVolume = (volume) => {\n    const MAX_VOLUME = 65536\n    const VOLUME_PERCENT = Math.floor(MAX_VOLUME/100)\n    fetch(`${PLAYER_VOLUME_URL}${volume*VOLUME_PERCENT}`)\n  }\n\n  return (\n    <div className=\"VolumeControl\">\n      <ButtonGroup size=\"large\" variant=\"contained\" fullWidth={true} color=\"primary\" aria-label=\"outlined primary button group\">\n        <Button onClick={()=>{setVolume(0)}} size=\"large\" style={{ borderTopLeftRadius: '1rem',  borderBottomLeftRadius: '1rem'}}><VolumeOffIcon/></Button>\n        <Button onClick={()=>{setVolume(8)}} size=\"large\"><VolumeMuteIcon/></Button>\n        <Button onClick={()=>{setVolume(15)}} size=\"large\"><VolumeDownIcon/></Button>\n        <Button onClick={()=>{setVolume(66)}} size=\"large\" style={{ borderTopRightRadius: '1rem',  borderBottomRightRadius: '1rem'}}><VolumeUpIcon/></Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport default VolumeControl;","import TrackInfo from '../TrackInfo'\nimport NextSongs from '../NextSongs'\nimport VolumeControl from '../VolumeControl'\nconst MainView = (props) => {\n  const {player} = props\n  return (\n    <div className=\"MainView\">\n      <div className=\"MainView__tack\">\n        <TrackInfo player={player}/>\n      </div>\n      <div className=\"MainView__next\">\n        {player.nextTracks && <NextSongs player={player}/>}\n      </div>\n      <div className=\"MainView__volume\">\n        <VolumeControl/>\n      </div>\n    </div>\n  );\n}\n\nexport default MainView;","export default __webpack_public_path__ + \"static/media/spotify.7ef0c8a2.png\";","import { useEffect, useState } from \"react\";\nimport logo from '../../assets/spotify.png'\n\n\nconst NoConnectionView = () => {\n  const [timeString, setTimeString] = useState();\n\n  console.log(logo)\n\n  useEffect(()=> {\n      const intervalID = setInterval(() => {\n        const date = new Date();\n        setTimeString(date.toLocaleTimeString(navigator.language, {\n          hour: '2-digit',\n          minute:'2-digit'\n        }));\n      }, 1000);\n\n      return () => clearInterval(intervalID)\n\n  },[])\n  return (\n    <div className=\"NoConnectionView\">\n      <h1 className=\"NoConnectionView__time\">{timeString}</h1>\n      <p className=\"NoConnectionView__text\">Verbinde dich über Spotify <img className=\"NoConnectionView__logo\" src={logo} alt=\"logo\" /></p>\n    </div>\n  );\n}\n\nexport default NoConnectionView;","import React, { useState, useEffect } from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport MainView from './components/MainView';\nimport {PLAYER_URL} from './config';\nimport NoConnectionView from './components/NoConnectionView';\n\n\nfunction App() {\n\n  const [player, setPlayer] = useState()\n\n  const [timeStamp, setTimeStamp] = useState(0)\n  const [idleCount, setIdleCount] = useState(0)\n\n  const fetchPlayer = () => {\n    fetch(PLAYER_URL)\n    .then(response => response.json())\n    .then(result => {\n        setPlayer(result)\n    })\n  }\n\n  useEffect(() =>{\n    let interval = setInterval(() => {fetchPlayer()}, 1000)\n    return () => clearInterval(interval)\n  })\n\n  useEffect(() => {\n    if(player && (player.trackTime !== timeStamp)){\n      setTimeStamp(player.trackTime);\n      setIdleCount(0);\n    } else {\n      setIdleCount(idleCount+1);\n    }\n  },[player])\n\n\n\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#fff',\n      },\n      secondary: {\n        main: '#666',\n      },\n    },\n  });\n\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        {player && !(idleCount>(60*60)) ? <MainView player={player}/> : <NoConnectionView /> }\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}